#!/usr/bin/env ruby
require "bundler/setup"
require "ruby-prof"
require "sapience"
require "pry"

TestException = Class.new(StandardError)
FILTERED_METHODS = [
  /Integer#times/,
  /Kernel#(\w*)/,
  /NilClass#(\w*)/,
]

puts "Starting RubyProf"
RubyProf.start

puts "Configuring Sapience"
Sapience.configure(force: true)
puts "Adding Sentry Appender"
Sapience.add_appender(
  :sentry,
  dsn: "https://5630e2b96b364d448a68914f3ddb91ce:1d4a94c64a1f4fe39736046fc0261ebb@sentry.io/107100",
)

logger = Sapience["Profile"]
puts "Logging 10 000 infos"
10_000.times do
  logger.info("something",  oh: "my")
end

puts "Logging 100 errors"
100.times do
  begin
    fail TestException
  rescue TestException => ex
    logger.error("something", { oh: "noes" }, ex)
  end
end

puts "Stopping RubyProf"
result = RubyProf.stop
result.eliminate_methods!(FILTERED_METHODS)
printer = RubyProf::MultiPrinter.new(result)
puts "Printing RubyProf Results"
printer.print(path: "tmp", profile: "profile")
